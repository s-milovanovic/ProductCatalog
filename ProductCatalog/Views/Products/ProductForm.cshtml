@model ProductCatalog.ViewModels.ProductFormViewModel

<h2>@(Model.Product.Id == 0 ? "New Product" : "Edit Product")</h2>

@using (Html.BeginForm(Model.Product.Id == 0 ? "Create" : "Update", "Products", FormMethod.Post))
{
    <div class="form-group">
        <label>Name</label>
        @Html.TextBoxFor(m => m.Product.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.Name)
    </div>
    <div class="form-group">
        <label>Description</label>
        @Html.TextAreaFor(m => m.Product.Description, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Category</label>
        @Html.DropDownListFor(m => m.Product.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "Select Category", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.CategoryId)
    </div>
    <div class="form-group">
        <label>Manufacturer</label>
        @Html.DropDownListFor(m => m.Product.ManufacturerId, new SelectList(Model.Manufacturers, "Id", "Name"), "Select Manufacturer", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.ManufacturerId)
    </div>
    <div class="form-group">
        <label>Supplier</label>
        @Html.DropDownListFor(m => m.Product.SupplierId, new SelectList(Model.Suppliers, "Id", "Name"), "Select Supplier", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.SupplierId)
    </div>
    <div class="form-group">
        <label>Price</label>
        @Html.TextBoxFor(m => m.Product.Price, new { @class = "form-control", @Value = Model.Product.Price.HasValue ? Model.Product.Price.Value.ToString("0.##") : string.Empty })
        @Html.ValidationMessageFor(m => m.Product.Price, "", new { @class = "text-danger" })
    </div>
    @Html.HiddenFor(m => m.Product.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">
        @(Model.Product.Id == 0 ? "Save" : "Update")
    </button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

